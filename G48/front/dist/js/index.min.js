function UpdateData(){this.maskWrapper=jQuery(".mask-wrapper")}function QueryBtn(){this.queryBtn=jQuery("#btn-search")}UpdateData.prototype.listenShowHideEvent=function(){jQuery("#submit-local").click(function(e){e.preventDefault(),window.svn_config=!0,jQuery("#progress-group").hide(),jQuery("#not-found").hide();var r=jQuery("#project-name").val().trim();jQuery(".project-name").text(r);var o=window.location.hostname,l=new WebSocket("ws://"+o+":9005/");try{l.onopen=function(e){var r=jQuery("#project-name").val().trim(),o=jQuery("#svn-host").val().trim(),t=jQuery("#git-username").val().trim(),n=jQuery("#git-password").val().trim(),s=jQuery("#svn-save").val().trim();if(""!==r&&""!==o&&""!==t&&""!==n&&""!=s){var a={type:"svnUpdate",name:r,host:o,username:t,password:n,localRoad:s},i=JSON.stringify(a);l.send(i),jQuery("#myModal").modal("hide"),jQuery("#modal_info").show()}else alert("必填项不能为空！")},l.onmessage=function(e){if("string"==typeof e.data){var r=JSON.parse(e.data).type;if("path_error"===r)return alert("保存路径不存在！"),void l.close();if("svn_config_success"===r)return alert("svn配置成功"),void l.close()}}}catch(e){log(e)}})},UpdateData.prototype.run=function(){this.listenShowHideEvent()},$(function(){(new UpdateData).run()}),QueryBtn.prototype.listenClickEnterEvent=function(){var r=this;r.queryBtn.click(function(){0!=window.svn_config?0!=window.able_search?r.connectionEvent():alert("请先热更新！！！"):alert("请先配置！！！")}),r.queryBtn.keypress(function(e){0!=window.svn_config?0!=window.able_search?13==e.keyCode&&r.connectionEvent():alert("请先热更新！！！"):alert("请先配置！！！")})},QueryBtn.prototype.connectionEvent=function(){jQuery("#update-progress-group").hide(),jQuery("#show_error_info").hide(),jQuery("#modal_info").hide();var e=window.location.hostname,s=new WebSocket("ws://"+e+":9005/");jQuery("#progress-group").show();var a=jQuery("#progressbar");a.css({width:0}),a.text("0.0% Complete (success)");var r=jQuery("#show_excel");jQuery("#not-found").hide(),r.html("");try{s.onopen=function(e){var r=new Object;if(r.type="queryInfo",r.keyword=jQuery("#inputKeyword").val(),0!==r.keyword.length){console.log("not empyt"),r.queryMode=jQuery("#select-type").val(),r.tableType=jQuery("#table-type1").val(),r.selectScope=jQuery("#select-scope").val();var o=JSON.stringify(r);s.send(o)}else console.log("empty")},s.onmessage=function(e){if("string"==typeof e.data){var r=JSON.parse(e.data),o=r.type;if("not_found"===o&&(console.log("未找到相关检索，通信正常关闭"),s.close(),jQuery("#not-found").show()),"more_data"===o&&(console.log("more_data"),alert("关键字检索范围过大，请进一步细化关键字"),s.close()),"query_finish"===o&&(console.log("正常通信关闭"),s.close()),"progressbar"===o&&(console.log("progressbar"),a.text(r.value+"% Complete (success)"),a.width(r.value+"%")),"query_result"==o){console.log("查询结果");var t=r.datas,n=template("query-item",{datas:t});jQuery("#show_excel").append(n)}}}}catch(e){log(e)}},QueryBtn.prototype.run=function(){this.listenClickEnterEvent()},$(function(){window.svn_config=!1,window.able_search=!1;var r=new QueryBtn;r.run(),jQuery("#inputKeyword").keypress(function(e){13==e.keyCode&&r.connectionEvent()}),jQuery("#reset-search").click(function(){jQuery(".form-horizontal")[0].reset()}),jQuery("#update").click(function(){if(0==window.svn_config)alert("请先配置！！！");else{var a=jQuery("#show_error_info");a.find("li").remove();var e=jQuery("#show_excel");jQuery("#not-found").hide(),jQuery("#progress-group").hide(),jQuery("#circle-progress-info").show(),e.html("");var r=window.location.hostname,i=new WebSocket("ws://"+r+":9005/"),o=new Object;o.type="update_request";var t=JSON.stringify(o);try{i.onopen=function(){i.send(t)},i.onmessage=function(e){if("string"==typeof e.data){var r=JSON.parse(e.data),o=r.type;if("path_error"===o&&(alert("保存路径不存在！"),i.close()),"badFiles"===o&&(i.close(),console.log("show badFiles")),"update_files"===o){jQuery("#circle-progress-info").hide(),jQuery("#update-progress-group").show(),jQuery("#update-progress-group").show();var t=jQuery("#update-progressbar");if(t.width(r.finish_precent),t.text("已更新:"+r.finish_precent),r.bad_file_info.file_name){a.show();var n=r.bad_file_info.error_type,s=r.bad_file_info.file_name;switch(n){case"BadZipfile":jQuery("#BadZipFile").show(),jQuery("#show_BadZipFile_files").append("<li>"+s+"</li>");break;case"TypeError":jQuery("#TypeError").show(),jQuery("#show_TypeError_files").append("<li>"+s+"</li>");break;case"IOError":jQuery("#IOError").show(),jQuery("#show_IOError_files").append("<li>"+s+"</li>")}}}"load_data_finish"===o&&(window.able_search=!0,i.close())}}}catch(e){log(e)}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlVwZGF0ZURhdGEiLCJ0aGlzIiwibWFza1dyYXBwZXIiLCJqUXVlcnkiLCJRdWVyeUJ0biIsInF1ZXJ5QnRuIiwicHJvdG90eXBlIiwibGlzdGVuU2hvd0hpZGVFdmVudCIsImNsaWNrIiwiZSIsInByZXZlbnREZWZhdWx0Iiwid2luZG93Iiwic3ZuX2NvbmZpZyIsImhpZGUiLCJwcmpOYW1lIiwidmFsIiwidHJpbSIsInRleHQiLCJhZGRyZXNzIiwibG9jYXRpb24iLCJob3N0bmFtZSIsInNvY2tldCIsIldlYlNvY2tldCIsIm9ub3BlbiIsIm1zZyIsInN2bkhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJsb2NhbFNhdmVSb2FkIiwiZGF0YSIsInR5cGUiLCJuYW1lIiwiaG9zdCIsInVzZXJuYW1lIiwibG9jYWxSb2FkIiwianNvblF1ZXJ5SW5mbyIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZW5kIiwibW9kYWwiLCJzaG93IiwiYWxlcnQiLCJvbm1lc3NhZ2UiLCJwYXJzZSIsImNsb3NlIiwibG9nIiwicnVuIiwiJCIsImxpc3RlbkNsaWNrRW50ZXJFdmVudCIsInNlbGYiLCJhYmxlX3NlYXJjaCIsImNvbm5lY3Rpb25FdmVudCIsImtleXByZXNzIiwia2V5Q29kZSIsInByb2dyZXNzIiwiY3NzIiwid2lkdGgiLCJzaG93X2V4Y2VsIiwiaHRtbCIsInF1ZXJ5SW5mbyIsIk9iamVjdCIsImtleXdvcmQiLCJsZW5ndGgiLCJjb25zb2xlIiwicXVlcnlNb2RlIiwidGFibGVUeXBlIiwic2VsZWN0U2NvcGUiLCJqc29uX29iaiIsImRhdGFzIiwidGVtcGxhdGUiLCJhcHBlbmQiLCJxdWVyeUJ0bk9qIiwicmVzZXQiLCJzaG93X2Vycm9yX2luZm8iLCJmaW5kIiwicmVtb3ZlIiwidXBkYXRlX2luZm8iLCJqc29uX3VwZGF0ZV9pbmZvIiwidXBkYXRlX3Byb2dyZXNzYmFyIiwiZXJyb3JfZmlsZV90eXBlIiwiZmlsZW5hbWUiXSwi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SUFBSXVDLEVBQWtCWixFQUF3QixjQUFjLFdBQ3hEYSxFQUFXYixFQUF3QixjQUFhLFVBQ3BELE9BQVFZLEdBRUosSUFBSyxhQUNENUUsT0FBTyxlQUFlcUMsT0FDdEJyQyxPQUFPLDBCQUEwQm1FLE9BQU8sT0FBUVUsRUFBVyxTQUMzRCxNQUNKLElBQUssWUFDRDdFLE9BQU8sY0FBY3FDLE9BQ3JCckMsT0FBTyx5QkFBeUJtRSxPQUFPLE9BQVFVLEVBQVcsU0FDMUQsTUFDSixJQUFLLFVBQ0Q3RSxPQUFPLFlBQVlxQyxPQUNuQnJDLE9BQU8sdUJBQXVCbUUsT0FBTyxPQUFRVSxFQUFXLFdBTzNELHFCQUFUbEQsSUFHQW5CLE9BQU91QyxhQUFjLEVBQ3JCN0IsRUFBT3VCLFdBTXZCLE1BQU9uQyxHQUNIb0MsSUFBSXBDIiwiZmlsZSI6ImluZGV4Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuZnVuY3Rpb24gVXBkYXRlRGF0YSgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2VsZi5tYXNrV3JhcHBlciA9IGpRdWVyeSgnLm1hc2std3JhcHBlcicpO1xufVxuXG5VcGRhdGVEYXRhLnByb3RvdHlwZS5saXN0ZW5TaG93SGlkZUV2ZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBzdWJtaXRMb2NhbCA9ICBqUXVlcnkoJyNzdWJtaXQtbG9jYWwnKTtcbiAgICBzdWJtaXRMb2NhbC5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHdpbmRvdy5zdm5fY29uZmlnID0gdHJ1ZTtcbiAgICAgICAgalF1ZXJ5KFwiI3Byb2dyZXNzLWdyb3VwXCIpLmhpZGUoKTtcbiAgICAgICAgalF1ZXJ5KFwiI25vdC1mb3VuZFwiKS5oaWRlKCk7XG4gICAgICAgIHZhciBwcmpOYW1lID0galF1ZXJ5KFwiI3Byb2plY3QtbmFtZVwiKS52YWwoKS50cmltKCk7XG4gICAgICAgIGpRdWVyeShcIi5wcm9qZWN0LW5hbWVcIikudGV4dChwcmpOYW1lKTtcblxuICAgICAgICAvLyB2YXIgaG9zdCA9IFwid3M6Ly8xMC4yNDAuMTEzLjE2NDo5MDA1L1wiO1xuICAgICAgICB2YXIgYWRkcmVzcyA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZTtcbiAgICAgICAgdmFyIGhvc3QgPSBcIndzOi8vXCIgKyBhZGRyZXNzICsgXCI6OTAwNS9cIjtcbiAgICAgICAgdmFyIHNvY2tldCA9IG5ldyBXZWJTb2NrZXQoaG9zdCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBzb2NrZXQub25vcGVuID0gZnVuY3Rpb24gKG1zZykge1xuICAgICAgICAgICAgICAgIHZhciBwcmpOYW1lICAgICAgID0galF1ZXJ5KFwiI3Byb2plY3QtbmFtZVwiKS52YWwoKS50cmltKCk7XG4gICAgICAgICAgICAgICAgdmFyIHN2bkhvc3QgICAgICAgPSBqUXVlcnkoXCIjc3ZuLWhvc3RcIikudmFsKCkudHJpbSgpO1xuICAgICAgICAgICAgICAgIHZhciB1c2VyICAgICAgICAgID0galF1ZXJ5KFwiI2dpdC11c2VybmFtZVwiKS52YWwoKS50cmltKCk7XG4gICAgICAgICAgICAgICAgdmFyIHBhc3N3b3JkICAgICAgPSBqUXVlcnkoXCIjZ2l0LXBhc3N3b3JkXCIpLnZhbCgpLnRyaW0oKTtcbiAgICAgICAgICAgICAgICB2YXIgbG9jYWxTYXZlUm9hZCA9IGpRdWVyeShcIiNzdm4tc2F2ZVwiKS52YWwoKS50cmltKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoKHByak5hbWUgPT09IFwiXCIpIHx8IChzdm5Ib3N0ID09PSBcIlwiKSB8fCAodXNlciA9PT0gXCJcIikgfHwgKHBhc3N3b3JkID09PSBcIlwiKSB8fCAobG9jYWxTYXZlUm9hZCA9PSBcIlwiKSkge1xuICAgICAgICAgICAgICAgICAgICBhbGVydCgn5b+F5aGr6aG55LiN6IO95Li656m677yBJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3ZuVXBkYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHByak5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGhvc3Q6IHN2bkhvc3QsXG4gICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyLFxuICAgICAgICAgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsUm9hZDogbG9jYWxTYXZlUm9hZFxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICB2YXIganNvblF1ZXJ5SW5mbyA9ICBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICAgICAgICAgICAgICBzb2NrZXQuc2VuZChqc29uUXVlcnlJbmZvKTtcbiAgICAgICAgICAgICAgICBqUXVlcnkoXCIjbXlNb2RhbFwiKS5tb2RhbCgnaGlkZScpO1xuICAgICAgICAgICAgICAgIGpRdWVyeShcIiNtb2RhbF9pbmZvXCIpLnNob3coKTtcbiAgICAgICAgICAgICAgICAvLyB3aW5kb3cubG9jYXRpb24ucmVsb2FkKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc29ja2V0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1zZy5kYXRhID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGpzb25fb2JqID0gSlNPTi5wYXJzZShtc2cuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0eXBlID0ganNvbl9vYmpbXCJ0eXBlXCJdO1xuICAgICAgICAgICAgICAgICAgICBpZih0eXBlID09PSBcInBhdGhfZXJyb3JcIikgICAgICAgICAgICAgICAvLyDloavlhpnnmoTot6/lvoTkuI3mraPnoa7nmoTmj5DnpLpcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+S/neWtmOi3r+W+hOS4jeWtmOWcqO+8gScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc29ja2V0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmKHR5cGUgPT09IFwic3ZuX2NvbmZpZ19zdWNjZXNzXCIpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdzdm7phY3nva7miJDlip8nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvY2tldC5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgbG9nKGUpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuXG5VcGRhdGVEYXRhLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubGlzdGVuU2hvd0hpZGVFdmVudCgpO1xufTtcblxuJChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHVwZGF0ZSA9IG5ldyBVcGRhdGVEYXRhKCk7XG4gICAgdXBkYXRlLnJ1bigpO1xufSk7XG5cbmZ1bmN0aW9uIFF1ZXJ5QnRuKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBzZWxmLnF1ZXJ5QnRuID0galF1ZXJ5KFwiI2J0bi1zZWFyY2hcIik7XG59XG5cblF1ZXJ5QnRuLnByb3RvdHlwZS5saXN0ZW5DbGlja0VudGVyRXZlbnQgPSBmdW5jdGlvbiAoKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2VsZi5xdWVyeUJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh3aW5kb3cuc3ZuX2NvbmZpZyA9PSBmYWxzZSApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFsZXJ0KFwi6K+35YWI6YWN572u77yB77yB77yBXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh3aW5kb3cuYWJsZV9zZWFyY2ggPT0gZmFsc2UgKVxuICAgICAgICB7XG4gICAgICAgICAgICBhbGVydChcIuivt+WFiOeDreabtOaWsO+8ge+8ge+8gVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGYuY29ubmVjdGlvbkV2ZW50KCk7XG4gICAgfSk7XG4gICAgc2VsZi5xdWVyeUJ0bi5rZXlwcmVzcyhmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAod2luZG93LnN2bl9jb25maWcgPT0gZmFsc2UgKVxuICAgICAgICB7XG4gICAgICAgICAgICBhbGVydChcIuivt+WFiOmFjee9ru+8ge+8ge+8gVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAod2luZG93LmFibGVfc2VhcmNoID09IGZhbHNlIClcbiAgICAgICAge1xuICAgICAgICAgICAgYWxlcnQoXCLor7flhYjng63mm7TmlrDvvIHvvIHvvIFcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PSAxMylcbiAgICAgICAgICAgIHNlbGYuY29ubmVjdGlvbkV2ZW50KCk7XG4gICAgfSk7XG59O1xuXG5RdWVyeUJ0bi5wcm90b3R5cGUuY29ubmVjdGlvbkV2ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBqUXVlcnkoXCIjdXBkYXRlLXByb2dyZXNzLWdyb3VwXCIpLmhpZGUoKTtcbiAgICBqUXVlcnkoXCIjc2hvd19lcnJvcl9pbmZvXCIpLmhpZGUoKTtcbiAgICBqUXVlcnkoXCIjbW9kYWxfaW5mb1wiKS5oaWRlKCk7XG5cbiAgICAvLyB2YXIgaG9zdCA9IFwid3M6Ly8xMC4yNDAuMTEzLjE2NDo5MDA1L1wiO1xuICAgIHZhciBhZGRyZXNzID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lO1xuICAgIHZhciBob3N0ID0gXCJ3czovL1wiICsgYWRkcmVzcyArIFwiOjkwMDUvXCI7XG4gICAgdmFyIHNvY2tldCA9IG5ldyBXZWJTb2NrZXQoaG9zdCk7XG4gICAgalF1ZXJ5KFwiI3Byb2dyZXNzLWdyb3VwXCIpLnNob3coKTtcbiAgICB2YXIgcHJvZ3Jlc3MgPSBqUXVlcnkoXCIjcHJvZ3Jlc3NiYXJcIilcbiAgICBwcm9ncmVzcy5jc3Moe1wid2lkdGhcIjogMH0pO1xuICAgIHByb2dyZXNzLnRleHQoJzAuMCUgQ29tcGxldGUgKHN1Y2Nlc3MpJyk7XG4gICAgdmFyIHNob3dfZXhjZWwgPSBqUXVlcnkoXCIjc2hvd19leGNlbFwiKTtcbiAgICBqUXVlcnkoXCIjbm90LWZvdW5kXCIpLmhpZGUoKTtcbiAgICBzaG93X2V4Y2VsLmh0bWwoXCJcIik7XG4gICAgdHJ5IHtcbiAgICAgICAgc29ja2V0Lm9ub3BlbiA9IGZ1bmN0aW9uIChtc2cpe1xuICAgICAgICAgICAgdmFyIHF1ZXJ5SW5mbyA9IG5ldyBPYmplY3QoKTtcbiAgICAgICAgICAgIHF1ZXJ5SW5mby50eXBlID0gXCJxdWVyeUluZm9cIjtcbiAgICAgICAgICAgIHF1ZXJ5SW5mby5rZXl3b3JkID0galF1ZXJ5KFwiI2lucHV0S2V5d29yZFwiKS52YWwoKTtcbiAgICAgICAgICAgIGlmKHF1ZXJ5SW5mby5rZXl3b3JkLmxlbmd0aCAhPT0gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm5vdCBlbXB5dFwiKTtcbiAgICAgICAgICAgICAgICBxdWVyeUluZm8ucXVlcnlNb2RlID0galF1ZXJ5KFwiI3NlbGVjdC10eXBlXCIpLnZhbCgpO1xuICAgICAgICAgICAgICAgIHF1ZXJ5SW5mby50YWJsZVR5cGUgPSBqUXVlcnkoXCIjdGFibGUtdHlwZTFcIikudmFsKCk7XG4gICAgICAgICAgICAgICAgcXVlcnlJbmZvLnNlbGVjdFNjb3BlID0galF1ZXJ5KFwiI3NlbGVjdC1zY29wZVwiKS52YWwoKTtcblxuICAgICAgICAgICAgICAgIHZhciBqc29uUXVlcnlJbmZvID0gIEpTT04uc3RyaW5naWZ5KHF1ZXJ5SW5mbyk7XG4gICAgICAgICAgICAgICAgc29ja2V0LnNlbmQoanNvblF1ZXJ5SW5mbyk7XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImVtcHR5XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNvY2tldC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAobXNnKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG1zZy5kYXRhID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAvLyDmmL7npLrmn6Xor6Lnu5Pmnpzku6PnoIFcbiAgICAgICAgICAgICAgICB2YXIganNvbl9vYmogPSBKU09OLnBhcnNlKG1zZy5kYXRhKTsgICAvLyDlj43luo/liJfljJZcbiAgICAgICAgICAgICAgICB2YXIgdHlwZSA9IGpzb25fb2JqW1widHlwZVwiXTsgICAgICAgICAgIC8vIOS8oOmAkui/h+adpeeahOaVsOaNruS4reS4gOWumuS8muaciXR5cGXlhbPplK7lrZfvvIzmoLnmja50eXBl5p2l5YGa55u45bqU55qE5pON5L2cXG5cbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gXCJub3RfZm91bmRcIikgICAgICAgICAgLy8g5pyq5om+5Yiw55u45YWz5qOA57Si55qE5o+Q56S6XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuacquaJvuWIsOebuOWFs+ajgOe0ou+8jOmAmuS/oeato+W4uOWFs+mXrVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc29ja2V0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIGpRdWVyeShcIiNub3QtZm91bmRcIikuc2hvdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gIFwibW9yZV9kYXRhXCIpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm1vcmVfZGF0YVwiKTtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCLlhbPplK7lrZfmo4DntKLojIPlm7Tov4flpKfvvIzor7fov5vkuIDmraXnu4bljJblhbPplK7lrZdcIik7XG4gICAgICAgICAgICAgICAgICAgIHNvY2tldC5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gXCJxdWVyeV9maW5pc2hcIikgICAgICAgLy8g6YCa5L+h5a6M5oiQXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuato+W4uOmAmuS/oeWFs+mXrVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc29ja2V0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlID09PSBcInByb2dyZXNzYmFyXCIpICAgICAgICAvLyDov5vluqbmnaHnmoTliqjmgIHmmL7npLpcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicHJvZ3Jlc3NiYXJcIik7XG4gICAgICAgICAgICAgICAgICAgIHByb2dyZXNzLnRleHQoanNvbl9vYmpbXCJ2YWx1ZVwiXSArICclIENvbXBsZXRlIChzdWNjZXNzKScpO1xuICAgICAgICAgICAgICAgICAgICBwcm9ncmVzcy53aWR0aChqc29uX29ialtcInZhbHVlXCJdICsgJyUnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PSBcInF1ZXJ5X3Jlc3VsdFwiKSAgICAgICAvLyDmmL7npLrmn6Xor6LnmoTnu5PmnpxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5p+l6K+i57uT5p6cXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YXMgPSBqc29uX29ialtcImRhdGFzXCJdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaHRtbCA9IHRlbXBsYXRlKCdxdWVyeS1pdGVtJyx7XCJkYXRhc1wiOiBkYXRhc30pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2hvd19leGNlbCA9IGpRdWVyeShcIiNzaG93X2V4Y2VsXCIpO1xuICAgICAgICAgICAgICAgICAgICBzaG93X2V4Y2VsLmFwcGVuZChodG1sKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gc29ja2V0Lm9uY2xvc2UgPSBmdW5jdGlvbiAobXNnKSB7IGFsZXJ0KFwic29ja2V0IGNsb3NlZCFcIikgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBsb2coZSk7XG4gICAgfVxufTtcblxuUXVlcnlCdG4ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBzZWxmLmxpc3RlbkNsaWNrRW50ZXJFdmVudCgpO1xufTtcblxuJChmdW5jdGlvbiAoKSB7XG4gICAgd2luZG93LnN2bl9jb25maWcgPSBmYWxzZTtcbiAgICB3aW5kb3cuYWJsZV9zZWFyY2ggPSBmYWxzZTtcbiAgICAvLyB3aW5kb3cuc3ZuX2NvbmZpZyA9IHRydWU7XG4gICAgdmFyIHF1ZXJ5QnRuT2ogPSBuZXcgUXVlcnlCdG4oKTtcbiAgICBxdWVyeUJ0bk9qLnJ1bigpO1xuICAgIHZhciBpbnB1dEtleXdvcmQgPSBqUXVlcnkoXCIjaW5wdXRLZXl3b3JkXCIpO1xuICAgIGlucHV0S2V5d29yZC5rZXlwcmVzcyhmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoZS5rZXlDb2RlID09IDEzKVxuICAgICAgICAgICAgcXVlcnlCdG5Pai5jb25uZWN0aW9uRXZlbnQoKTtcbiAgICB9KTtcbiAgICBqUXVlcnkoXCIjcmVzZXQtc2VhcmNoXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgalF1ZXJ5KFwiLmZvcm0taG9yaXpvbnRhbFwiKVswXS5yZXNldCgpO1xuICAgIH0pO1xuXG4gICAgalF1ZXJ5KFwiI3VwZGF0ZVwiKS5jbGljayhmdW5jdGlvbiAoKSB7ICAgICAgICAgICAgICAgICAgICAgLy8g54K55Ye754Ot5pu05pawXG4gICAgICAgIGlmICh3aW5kb3cuc3ZuX2NvbmZpZyA9PSBmYWxzZSApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFsZXJ0KFwi6K+35YWI6YWN572u77yB77yB77yBXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHNob3dfZXJyb3JfaW5mbyA9IGpRdWVyeShcIiNzaG93X2Vycm9yX2luZm9cIik7XG4gICAgICAgICAgICBzaG93X2Vycm9yX2luZm8uZmluZChcImxpXCIpLnJlbW92ZSgpO1xuICAgICAgICAgICAgdmFyIHNob3dfZXhjZWwgPSBqUXVlcnkoXCIjc2hvd19leGNlbFwiKTtcbiAgICAgICAgICAgIGpRdWVyeShcIiNub3QtZm91bmRcIikuaGlkZSgpO1xuICAgICAgICAgICAgalF1ZXJ5KFwiI3Byb2dyZXNzLWdyb3VwXCIpLmhpZGUoKTtcbiAgICAgICAgICAgIGpRdWVyeShcIiNjaXJjbGUtcHJvZ3Jlc3MtaW5mb1wiKS5zaG93KCk7XG4gICAgICAgICAgICBzaG93X2V4Y2VsLmh0bWwoXCJcIik7XG5cbiAgICAgICAgICAgIC8vIHZhciBob3N0ID0gXCJ3czovLzEwLjI0MC4xMTMuMTY0OjkwMDUvXCI7XG4gICAgICAgICAgICB2YXIgYWRkcmVzcyA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZTtcbiAgICAgICAgICAgIHZhciBob3N0ID0gXCJ3czovL1wiICsgYWRkcmVzcyArIFwiOjkwMDUvXCI7XG4gICAgICAgICAgICB2YXIgc29ja2V0ID0gbmV3IFdlYlNvY2tldChob3N0KTtcbiAgICAgICAgICAgIHZhciB1cGRhdGVfaW5mbyA9IG5ldyBPYmplY3QoKTtcbiAgICAgICAgICAgIHVwZGF0ZV9pbmZvLnR5cGUgPSBcInVwZGF0ZV9yZXF1ZXN0XCI7XG4gICAgICAgICAgICB2YXIganNvbl91cGRhdGVfaW5mbyA9ICBKU09OLnN0cmluZ2lmeSh1cGRhdGVfaW5mbyk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHNvY2tldC5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNvY2tldC5zZW5kKGpzb25fdXBkYXRlX2luZm8pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzb2NrZXQub25tZXNzYWdlID0gZnVuY3Rpb24gKG1zZykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1zZy5kYXRhID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uX29iaiA9IEpTT04ucGFyc2UobXNnLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBqc29uX29ialtcInR5cGVcIl07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZih0eXBlID09PSBcInBhdGhfZXJyb3JcIikgICAgICAgICAgICAgICAvLyDloavlhpnnmoTot6/lvoTkuI3mraPnoa7nmoTmj5DnpLpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgn5L+d5a2Y6Lev5b6E5LiN5a2Y5Zyo77yBJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc29ja2V0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gXCJiYWRGaWxlc1wiKSAgICAgICAgICAgICAgICAgLy/ovb3lhaXmlbDmja7norDliLDlnY/mlofku7bnmoTmj5DnpLpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb2NrZXQuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInNob3cgYmFkRmlsZXNcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHR5cGUgPT09IFwidXBkYXRlX2ZpbGVzXCIpICAgICAgICAgICAgICAvLyDmm7TmlrDov5vluqbmnaHnmoTmmL7npLpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkoXCIjY2lyY2xlLXByb2dyZXNzLWluZm9cIikuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeShcIiN1cGRhdGUtcHJvZ3Jlc3MtZ3JvdXBcIikuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cGRhdGVfcHJvZ3Jlc3NfZ3JvdXAgPSBqUXVlcnkoXCIjdXBkYXRlLXByb2dyZXNzLWdyb3VwXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZV9wcm9ncmVzc19ncm91cC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVwZGF0ZV9wcm9ncmVzc2JhciA9IGpRdWVyeShcIiN1cGRhdGUtcHJvZ3Jlc3NiYXJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlX3Byb2dyZXNzYmFyLndpZHRoKGpzb25fb2JqW1wiZmluaXNoX3ByZWNlbnRcIl0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZV9wcm9ncmVzc2Jhci50ZXh0KFwi5bey5pu05pawOlwiICsganNvbl9vYmpbXCJmaW5pc2hfcHJlY2VudFwiXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoanNvbl9vYmpbXCJiYWRfZmlsZV9pbmZvXCJdW1wiZmlsZV9uYW1lXCJdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd19lcnJvcl9pbmZvLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yX2ZpbGVfdHlwZSA9IGpzb25fb2JqW1wiYmFkX2ZpbGVfaW5mb1wiXVtcImVycm9yX3R5cGVcIl07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaWxlbmFtZSA9IGpzb25fb2JqW1wiYmFkX2ZpbGVfaW5mb1wiXVtcImZpbGVfbmFtZVwiXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlcnJvcl9maWxlX3R5cGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJCYWRaaXBmaWxlXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KFwiI0JhZFppcEZpbGVcIikuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeShcIiNzaG93X0JhZFppcEZpbGVfZmlsZXNcIikuYXBwZW5kKFwiPGxpPlwiKyBmaWxlbmFtZSArIFwiPC9saT5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiVHlwZUVycm9yXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KFwiI1R5cGVFcnJvclwiKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KFwiI3Nob3dfVHlwZUVycm9yX2ZpbGVzXCIpLmFwcGVuZChcIjxsaT5cIisgZmlsZW5hbWUgKyBcIjwvbGk+XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIklPRXJyb3JcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkoXCIjSU9FcnJvclwiKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KFwiI3Nob3dfSU9FcnJvcl9maWxlc1wiKS5hcHBlbmQoXCI8bGk+XCIrIGZpbGVuYW1lICsgXCI8L2xpPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gXCJsb2FkX2RhdGFfZmluaXNoXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8galF1ZXJ5KFwiI3VwZGF0ZS1wcm9ncmVzcy1ncm91cFwiKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmFibGVfc2VhcmNoID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb2NrZXQuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhbGVydChcIuaVsOaNruabtOaWsOWujOaIkFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgbG9nKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59KTsiXX0=
